sass学习文档: https://sass.bootcss.com/guide.html
stylus学习：https://www.stylus-lang.cn/

全局安装npm install sass -g(命令行中输入)

sass -> 环境变量 ->  脚本 -> 执行程序

    如果没有加"-g"则安装到本地
    则使用时需要使用npx，如：npx sass --version
    注意使用的时候需要在同一目录

npm 重要的命令:
    npm install     可以带参数 --save-dev   或者 --save
    npm uninstall
    1. 安装本地依赖
        npm install --save [pkg_name]
    2. 安装cli(命令行)
        npm install -g [pkg_name]
    3. 当使用pkg管理拉取初始化依赖
        npm install
        1) 看package.json
        2) 执行npm install

sass 将源文件转换为目标文件css
编程方式，用自己的程序将scss文件转化为css文件
node ./day3/src/index.js

一般提供程序时有两种状态：
    1. 开箱即用(命令行/桌面文件)
    屏蔽底层细节，可以直接使用
    2. 有无API，能不能通过编程的方式进行调用


scss掌握：
    1. 五种常用语法(变量，嵌套，mixins，继承，@use引入)
    2. 如何编译:    saa 源文件 目标文件
    3. sass(node包)可编程方式实现编译
    4. 外部文件 index.html引入css
    5. 可以学习less/stylus，但是scss够用了


浮动学习可参考：浮动.md
或者参考文档：https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Floats

媒体查询(如果只是修改字体颜色或者大小之类可以使用，对于大场景可以换一个css)：
    即自适应。根据屏幕大小调整css
    指定宽度：
        <style>
        @media screen and (width: 600px) {
            .flow {
                color: red
            }
        }
    </style>
    限定最大宽度(同理可以实现最小宽度)：
    <style>
        @media screen and (max-width: 600px) {
            .flow {
                color: red
            }
        }
    </style>

动画参考文档:  https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_animations/Using_CSS_animations
或者：https://www.runoob.com/cssref/css-animatable.html
动画的几种形式：
    1. 关键帧 + animation
        自定义 @keyframes
        @keyframes name{
            0%:
            25%:
            ...
        }